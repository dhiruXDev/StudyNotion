import React from 'react'
import { studentEndpoints } from '../apis'
import toast from 'react-hot-toast';
import { apiConnector } from '../apiConnector';
import rzp_logo from "../../assets/logo/rzp_logo.png"
//import { sendPaymentSuccesfullEmail, verifyPayment } from '../../../server/controllers/Payments';
import { setPaymentLoading } from '../../slices/courseSlice';
import { resetCart } from '../../slices/cartSlices';
const {COURSE_PAYMENT_API,PAYMENT_VERIFY_API,SEND_PAYMENT_SUCCESFULL_EMAIL_API} =studentEndpoints;
//Loading the script
function loadScript(src){
   return new Promise((resolve)=>{
    const script =document.createElement("script");
    script.src= src;
   
    script.onload= ()=>{
      resolve(true);
    }
    script.onerror = ()=>{
      resolve(false);
    }
    document.body.appendChild(script);
   })
}
{/* <script src=" " ...... > </script>    uper vale function  ka yhi mtlb hai ,
    calling this script --> loadScript("https://checkout.razorpay.com/v1/checkout.js) <--
    Loading the script on onload */}
export async function BuyCourse (userDetails,courses,token,navigate,dispatch) {
      const toastid =toast.loading("Loading...");
      console.log( "CourseId hai" , courses , token);
      try {
           const res = await loadScript("https://checkout.razorpay.com/v1/checkout.js");
           if (!res) {
               return  toast.error("RazorPay SDK file load failed");
           }
           //Initilize the order(with the calling the capture payment route)
           const orderResponse = await apiConnector("POST" , COURSE_PAYMENT_API , {courses} , {
                                                                                 Authorization : `Bearer ${token}`
           });
           if (!orderResponse.data.success) {
               throw new Error(orderResponse.data.message);
           }
          console.log(orderResponse.data.message.id);
           //Creating option
           const url = process.env.REACT_APP_RAZORPAY_KEY;
            const options = {
                      key: process.env.REACT_APP_RAZORPAY_KEY,
                      currency : orderResponse.data.message.currency,
                      amount:`${orderResponse.data.message.amount}`,
                      order_id: orderResponse.data.message.id,
                      name:"StudyNotion",
                      description:"Thank you for Puchasing the Course",
                      image: rzp_logo,
                      prefill:{
                        name:`${userDetails.firstName + userDetails.lastName }`,
                        email:userDetails.email
                      },
                      
                      handler:function(response){  
                        //Send succesfull vala email
                        sendPaymentSuccesfullEmail(response, orderResponse.data.message.amount ,token);
                        //verify payment, orderId,paymentId,amount,userId
                        verifyPayment({...response,courses},token,navigate,dispatch);
                      }
           }
          //---> This is for Open Razorpay modal for payment
           const paymentObject = window.Razorpay(options);
           paymentObject.open();
           paymentObject.on("payment.failed" , function(response){
                  toast.error("Oops ! Payment failed");
           })
           toast.dismiss(toastid);
/**
 * Response properties in the Razorpay handler:
            Here are the properties that Razorpay sends in the response:

            razorpay_order_id (order ID generated by Razorpay)
            razorpay_payment_id (unique payment ID)
            razorpay_signature (signature generated by Razorpay for verification)
 */
      } catch (error) {
         console.log( "ERROR occurs during Buy Cuurse /Initilize Order", error);
         toast.error(error.message);
      }
      toast.dismiss(toastid);
}

async function sendPaymentSuccesfullEmail(response,amount,token) {
 
      try {
         const res = await apiConnector("POST",SEND_PAYMENT_SUCCESFULL_EMAIL_API,{
                                       orderId: response.razorpay_order_id,
                                       paymentId : response.razorpay_payment_id,
                                       amount},
                                      {
                                        Authorization : `Bearer ${token}`
                                      }
       )
       if(!res.data.success){
        throw new Error(res.data.message);
       }
       console.log("Email sent successfully:");
       toast.success("Mail Sent On Your registered Email_Id");
      } catch (error) {
        console.log( "ERROR occurs during Sending Email",error);
      }
}
//https://razorpay.com/docs/api/orders/fetch-with-id   
//visit this site 
async function verifyPayment(bodyData, token,navigate,dispatch) {
         const toastId = toast.loading("Verifying Payment...");
         dispatch(setPaymentLoading(true));
         try {
                const res = await apiConnector("POST",PAYMENT_VERIFY_API , bodyData ,{
                                      Authorization:`Bearer ${token}`
                });
                if(!res.data.success){
                  throw new Error(res.data.message);
                }
                toast.success("Payment Verified Succesfully , You are enrolled for new Course.");
                navigate("/dashboard/enrolled-course");
                dispatch(resetCart());
         } catch (error) {
                 console.log( "Error in verifying payment",error);
                 console.log( "error ",error.message);
                 toast.error("Could not Verify Payment");
         }
         toast.dismiss(toastId);
         dispatch(setPaymentLoading(false));
}